//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Number.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AlwaysOT {
            get {
                return ((bool)(this["AlwaysOT"]));
            }
            set {
                this["AlwaysOT"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool DefaultColor {
            get {
                return ((bool)(this["DefaultColor"]));
            }
            set {
                this["DefaultColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Vazir, 12pt")]
        public global::System.Drawing.Font AppFont {
            get {
                return ((global::System.Drawing.Font)(this["AppFont"]));
            }
            set {
                this["AppFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Vazir, 12pt")]
        public global::System.Drawing.Font DFont {
            get {
                return ((global::System.Drawing.Font)(this["DFont"]));
            }
            set {
                this["DFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("11, 10, 27")]
        public global::System.Drawing.Color LightTheme {
            get {
                return ((global::System.Drawing.Color)(this["LightTheme"]));
            }
            set {
                this["LightTheme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3")]
        public string Counter {
            get {
                return ((string)(this["Counter"]));
            }
            set {
                this["Counter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Add")]
        public global::System.Windows.Forms.Keys ShortKey_Add {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_Add"]));
            }
            set {
                this["ShortKey_Add"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Alt+C")]
        public global::System.Windows.Forms.Keys ShortKey_Clear {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_Clear"]));
            }
            set {
                this["ShortKey_Clear"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Shift+S")]
        public global::System.Windows.Forms.Keys ShortKey_Setting {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_Setting"]));
            }
            set {
                this["ShortKey_Setting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Shift+A")]
        public global::System.Windows.Forms.Keys ShortKey_AddN {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_AddN"]));
            }
            set {
                this["ShortKey_AddN"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Shift+C")]
        public global::System.Windows.Forms.Keys ShortKey_Compress {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_Compress"]));
            }
            set {
                this["ShortKey_Compress"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Shift+T")]
        public global::System.Windows.Forms.Keys ShortKey_Counter {
            get {
                return ((global::System.Windows.Forms.Keys)(this["ShortKey_Counter"]));
            }
            set {
                this["ShortKey_Counter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpdateData {
            get {
                return ((bool)(this["UpdateData"]));
            }
            set {
                this["UpdateData"] = value;
            }
        }
    }
}
